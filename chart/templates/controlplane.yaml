apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
metadata:
  name: istiocontrolplane
  namespace: {{ .Release.Namespace }}
spec:
  profile: {{ .Values.profile }}
  hub: {{ .Values.hub }}
  tag: {{ .Values.tag }}

  components:
    egressGateways:
    - name: istio-egressgateway
      enabled: {{ .Values.egressGateway.enabled }}
      {{- with .Values.egressGateway.spec }}
      {{- toYaml . |  nindent 6 }}
      {{end }}
    ingressGateways:
      - name: istio-ingressgateway
        namespace: {{ .Release.Namespace }}
        enabled: true
        k8s:
          {{- with .Values.ingressGateway.extraK8sConfig  }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
          service:
            type: {{ .Values.ingressGateway.type }}
            ports:
              {{- range $k, $v := .Values.ingressGateway.ports }}
              {{- /* Input validation */}}
              {{- if not $v.name }}
                {{- fail "missing field 'name' in ports object" }}
              {{- else if not $v.port }}
                {{- fail "missing field 'port' in ports object" }}
              {{- else if eq $.Values.ingressGateway.type "NodePort" }}
                {{- if not $v.nodePort }}
                  {{- fail "'nodePort' must be defined when type is NodePort" }}
                {{- else if or (lt (int $v.nodePort) 30000) (gt (int $v.nodePort) 32767) }}
                  {{- fail "nodePort value outside of acceptable range (30000-32767)" }}
                {{- end }}
              {{- end }}
              {{- /* Actual port object rendering */}}
              -
                {{- range $pk, $pv := $v }}
                {{ $pk }}: {{ $pv }}
                {{- end }}
              {{- end }}
          hpaSpec:
            minReplicas: {{ .Values.ingressGateway.minReplicas }}
            maxReplicas: {{ .Values.ingressGateway.maxReplicas }}
            metrics:
              - type: Resource
                resource:
                  name: cpu
                  targetAverageUtilization: 60
            scaleTargetRef:
              apiVersion: apps/v1
              kind: Deployment
              name: istio-ingressgateway
          strategy:
            rollingUpdate:
              maxSurge: 100%
              maxUnavailable: 25%
          serviceAnnotations:
            {{- toYaml .Values.ingressGateway.serviceAnnotations | nindent 14 }}
      {{- range .Values.extraIngressGateways }}
      - name: {{ .name }}
        enabled: true
        k8s:
          hpaSpec:
            minReplicas: {{ .k8s.hpaSpec.minReplicas }}
            maxReplicas: {{ .k8s.hpaSpec.maxReplicas }}
            metrics:
              - type: Resource
                resource:
                  name: cpu
                  targetAverageUtilization: 60
            scaleTargetRef:
              apiVersion: apps/v1
              kind: Deployment
              name: {{ .name }}
          strategy:
            rollingUpdate:
              maxSurge: 100%
              maxUnavailable: 25%
          serviceAnnotations:
            {{- toYaml .k8s.serviceAnnotations | nindent 14 }}
  {{- end }}

  addonComponents:
    kiali:
      enabled: {{ .Values.kiali.enabled }}
    tracing:
      enabled: {{ .Values.tracing.enabled }}

  meshConfig:
    accessLogFile: /dev/stdout
    {{- toYaml .Values.meshConfig |  nindent 4 }}
  values:
    global:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.extraGlobalValues }}
        {{- toYaml . | nindent 6 }}
      {{- end }}
    {{- with .Values.extraValues }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
    # https://istio.io/v1.5/docs/reference/config/installation-options/#kiali-options
    kiali:
      image: {{ .Values.kiali.image.name }}
      hub: {{ .Values.kiali.image.hub }}
      tag: {{ .Values.kiali.image.tag }}
      {{- if .Values.monitoring.enabled }}
      prometheusAddr: http://monitoring-monitoring-kube-prometheus.monitoring.svc:9090
      {{- end }}
      dashboard:
        jaegerURL: https://tracing.{{ .Values.hostname}}
        grafanaInClusterURL: http://monitoring-monitoring-grafana.monitoring.svc
        auth:
          strategy: {{ .Values.kiali.dashboard.auth.strategy }}

    sidecarInjectorWebhook:
      rewriteAppHTTPProbe: true

      neverInjectSelector:
        - matchExpressions:
            - key: app.kubernetes.io/component
              operator: In
              values: [fluentd-configcheck]

    tracing:
      jaeger:
        image: {{ .Values.tracing.image.name }}
        hub: {{ .Values.tracing.image.hub }}
        tag: {{ .Values.tracing.image.tag}}

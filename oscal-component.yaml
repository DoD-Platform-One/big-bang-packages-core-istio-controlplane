# add the descriptions inline
component-definition:
  uuid: 7E3269FC-FE33-49C9-BE88-6C868E21AAE1
  metadata:
    title: Istio Controlplane
    last-modified: '2021-10-19T12:00:00Z'
    version: "20211019"
    oscal-version: 1.1.1
    parties:
      # Should be consistent across all of the packages, but where is ground truth?
    - uuid: 72134592-08C2-4A77-ABAD-C880F109367A
      type: organization
      name: Platform One
      links:
      - href: https://p1.dso.mil
        rel: website
  components:
  - uuid: 81F6EC5D-9B8D-408F-8477-F8A04F493690
    type: software
    title: Istio Controlplane
    description: |
      Istio Service Mesh
    purpose: Istio Service Mesh
    responsible-roles:
    - role-id: provider
      party-uuids:
        - 72134592-08C2-4A77-ABAD-C880F109367A # matches parties entry for p1
    control-implementations:
    - uuid: d2afb4c4-2cd8-5305-a6cc-d1bc7b388d0c
      source: https://raw.githubusercontent.com/GSA/fedramp-automation/93ca0e20ff5e54fc04140613476fba80f08e3c7d/dist/content/rev5/baselines/json/FedRAMP_rev5_HIGH-baseline-resolved-profile_catalog.json
      description:
        Controls implemented by Istio and authservice that are inherited by applications
      implemented-requirements:
      - uuid: 1822457D-461B-482F-8564-8929C85C04DB
        control-id: ac-3
        description: >-
          Istio implements with global configuration.

          # How Istio Helps
          Istio helps implement access enforcement in two ways: limiting service-to-service access (see AC-4 below),
          and acting as an enforcement point for end user authentication and authorization (AC-3, this section).
          - Service to Service Access: Istio provides authenticatable runtime identities for all applications in the mesh in the form of X.509 certificates.
            Those certificates are used for encryption in transit as well as authentication of the service's identity.
            This authenticated principal can be used for access control of service to service communication via Istio's AuthorizationPolicy.
            We cover this in detail in AC-4, Information Flow Enforcement, below.
          - End User Authentication and Authorization: Istio facilitates end user authentication and authorization in two ways:
            1. Istio has native support for JWT authentication and authorization based on JWT claims.
               It can be configured to extract a JWT from each request's headers, validate them against issuers and with specific keys, and limit access based on any of the JWT's fields.
            2. Istio supports extracting metadata from each request and forwarding it to an external authentication and authorization server.
               Istio will enforce the verdict returned by this server, and can attach additional metadata returned by the server (e.g., an internal JWT in place of an external API key).
        links:
          - href: 8eabdd2a-d637-4b00-a215-a953d7feed74
            rel: reference
            text: Lula Validation

      - uuid: D7717A9B-7604-45EF-8DCF-EE4DF0417F9C
        control-id: ac-4
        description: >-
          Istio implements with mission team configuration.

          # How does Istio help?
          Istio encrypts all in-mesh communication at runtime using the service's identity. 
          This provides TLS for all applications in the mesh. If you're using the Tetrate Istio Distribution, then this TLS is FIPS verified. mTLS is configured through the PeerAuthentication resource, and should be set to STRICT to enforce mTLS between all components of the information system.
          Istio's AuthorizationPolicy controls service-to-service communication within the mesh. 
          Combined with Istio ingress and egress gateways, as well as a few installation settings, Istio can manage all traffic into and out of your deployment.
          In addition to AuthorizationPolicies controlling traffic in the mesh, Istio ingress gateways terminate HTTPS on behalf of applications in the mesh (AC-4 (4) - not required by moderate but valuable nonetheless). 
          By managing how traffic flows out of applications using VirtualServices or ServiceEntries, all traffic leaving your infrastructure can be channeled through an egress gateway. 
          Egress gateways can audit and limit how traffic flows to external services outside of the information system under control.
        
        links:
          - href: ca49ac97-487a-446a-a0b7-92b20e2c83cb
            rel: reference
            text: Lula Validation

      - uuid: 1D1E8705-F6EB-4A21-A24F-1DF7427BA491
        control-id: ac-4.4
        description: >-
          All encrypted HTTPS connections are terminated at the Istio ingress gateway.

        links:
          - href: fd071676-6b92-4e1c-a4f0-4c8d2bd55aed
            rel: reference
            text: Lula Validation

      - uuid: 366AAE60-AC24-4F48-BF63-4C0EB496CC9E
        control-id: ac-4.21
        description: >-
          Istio implements with mission team configuration.

          # How does Istio help?
          When Istio is configured as above for AC-4 limiting access to services within the information system and controlling communication ingress and egress to and from the information system it provides logical separation of information flows. 
          Istio policies can provide this separation at the finest grain possible. For example, for HTTP traffic, Istio provides the ability to limit communication per verb and path, as well as based on header values or end-user credentials stored at headers, in addition to controlling traffic with the traditional network five-tuple. 
          Istio enforces the policy at the application instance itself.

        links:
          - href: 008e905b-4143-43f1-9211-9835059a1c68
            rel: reference
            text: Lula Validation

      - uuid: CD1315BF-91FE-490A-B6A6-5616690D78A8
        control-id: ac-6.3
        description: >-
          Configured with an "admin" gateway to restrict access to applications that only need sysadmin access. 

        links:
          - href: f7b587d2-b44b-42df-a9c0-e4c3d09670da
            rel: reference
            text: Lula Validation

      - uuid: 3772B5F3-34BC-4EAE-B739-8499F828C2F4
        control-id: ac-6.9
        description: >-
          Istio implements with global configuration.

          # How does Istio help?
          Istio produces logs for all traffic in the information system see AU-3 below for more information on what information is logged and how to configure additional information to be logged with each access. 
          As long as the privileged functions are exposed as network endpoints in the information system, Istio will log their use like it logs all other network traffic.
          Logging privileged use outside of the information system like using kubectl to access the cluster directly is outside of the scope of Istio's runtime logging.

        links:
          - href: 854746a0-3e4d-4939-a2c6-069f9b34d929
            rel: reference
            text: Lula Validation

      - uuid: 6109E09A-8279-44AB-8CA4-2051AF895648
        control-id: ac-14
        description: >-
          Istio implements with mission team configuration.

          # How does Istio help?
          Istio is configured to extract end-user credentials from requests for authentication (either locally, or forwarding them on to an external authorization service), and to disallow requests without authentication tokens. 
          This is configured using RequestAuthentication and AuthorizationPolicy resources, described at length in AC-4 above.
          Using this, Istio's authorization policy becomes documentation of services that do not require authentication.
        
        links:
          - href: 8841bc08-0b11-43f6-807c-0ec66da9161a
            rel: reference
            text: Lula Validation
                
      - uuid: ead87eb9-a436-4ac9-bdde-8d60fd2b6c72
        control-id: ac-17.3
        description: >-
          Istio routes remote access through correct configuration and managed network access control points.
        
        links:
          - href: facb4f26-76dc-4f90-855a-9b80a74d5a00
            rel: reference
            text: Lula Validation
           
      - uuid: 9B6BA674-E6ED-4FB6-B216-3C8733F36411
        control-id: au-2
        description: >-
          Istio provides access logs for all HTTP network requests, including mission applications.
        
        links:
          - href: 2d930528-7411-4d4c-a92f-f7aa96e68f10
            rel: reference
            text: Lula Validation
           
      - uuid: D3CBC898-F938-4FAA-B1B1-2597A69B5600
        control-id: au-3
        description: >-
          Istio implements with global configuration.

          # How does Istio help?
          Istio generates access logs for all traffic in the mesh (ingress, internal, and egress) that is a superset of the data in the [Common Log Format](https://en.wikipedia.org/wiki/Common_Log_Format). 
          For HTTP traffic, this includes timestamp, source and destination IPs, request verb, response code, and more. 
          You can get a full overview of the data that is provided [in the Istio documentation](https://istio.io/latest/docs/tasks/observability/logs/access-log/). 
          The format of these logs can be configured per deployment or globally at install time to conform with requirements of existing log analysis tools or other organizational needs.
          By default, Envoy sidecars in the mesh emit these logs as text to standard out. However, Envoy can be configured to forward this log data over gRPC to a server that aggregates (and potentially acts on) them. 
          This is called the [Access Log Service (ALS)](https://www.envoyproxy.io/docs/envoy/latest/api-v3/service/accesslog/v3/als.proto).
          These can be augmented by application-specific audit logging, but for many services (and HTTP services especially), the mesh's logs are sufficient to reconstruct an understanding of events to perform an audit.
        
        links:
          - href: 67eec4e5-73d6-4f68-aa47-5f0e15416b58
            rel: reference
            text: Lula Validation
           
      - uuid: 630301DB-8730-4107-9E14-A1EEDE351122
        control-id: au-3.1
        description: >-
          Istio implements with global configuration.

          # How does Istio help?
          Istio’s access logs can be configured to produce additional information as needed by the organization.
        
        links:
          - href: 9a552d2e-31e0-41a6-8d3b-235533294ea0
            rel: reference
            text: Lula Validation
           
      - uuid: 6F2A603C-D240-47F1-9BED-334000E15011
        control-id: au-9
        description: >-
          Istio contributes but does not implement.

          # How does Istio Help?
          If you’re using Istio to produce audit information (see AU-3, AU-3 (1)), then the logs that Istio produces are subject to AU-9 controls. 
          Protecting the logs that Istio produces is outside of the scope of Istio itself, but integrating your log ingestion and protection system with the logs that Istio produces, you can easily satisfy this requirement.
          Kubernetes RBAC should be configured to allow only specific users access to the log files Envoy produces, ideally no users should have direct access and instead only access logs via the log ingestion system (like Splunk).
        
        links:
          - href: d245b381-ffc3-4258-bc8d-a01e7a61d98b
            rel: reference
            text: Lula Validation
           
      - uuid: 6F2A603C-D240-47F1-9BED-334000E15011
        control-id: au-9.2
        description: >-
          Istio contributes but does not implement.

          # How does Istio Help?
          See AU-9 above, but in short: ensure that Istio’s logging configuration aligns with your larger log collection pipeline. The log collection pipeline itself should implement the AU-9 controls required by the organization.
        
        links:
          - href: 941583f4-2563-4671-b94c-9b4378d170fa
            rel: reference
            text: Lula Validation
           
      - uuid: 13EC0F18-2696-4407-8478-3AFE839D4764
        control-id: au-12
        description: >-
          Istio implements with global configuration.

          # How does Istio Help?
          Istio generates logs for all network traffic - TCP connections, HTTP requests, etc. These events are a subset of all events defined by most organizations in AU-2 a. as worthy of audit. 
          See AU-3 for details of the information that can be generated, and AU-3 (1) for information on customizing it.
          If the only events to be logged per AU-2 a. are network events, then Istio satisfies AU-12 fully for the information system.
        
        links:
          - href: 9e2f0907-28b0-4438-b196-4a7f3b3c98fa
            rel: reference
            text: Lula Validation
           
      - uuid: D01F6B2D-F18E-47E9-94DC-95C0B5675E13
        control-id: cm-5
        description: >-
          Istio contributes but does not implement.

          # How does Istio Help?
          Istio is configured with Kubernetes Custom Resources. As such it can be configured as code, and managed by your existing CM-5 conformant code management processes. 
          Kubernetes RBAC should be used to control who can change which configuration at runtime.
          BigBang implements CM-5 controls by implementing infrastructure as code practices, configuring Kubernetes RBAC to prevent humans from authoring configuration and allowing only continuous delivery systems (Flux, by default) to author runtime configuration. 
          Since all configuration is managed in this CM-5 conformant way, Istio’s configuration is controlled in a CM-5 conformant way.
        
        links:
          - href: 3df5b81c-dafb-4de1-a120-07f234d66ea5
            rel: reference
            text: Lula Validation
           
      - uuid: 618C16DE-82D0-46FF-9A3A-D260D5F4F654
        control-id: cm-6
        description: >-
          Istio contributes but does not implement. 

          # How does Istio Help?
          This document provides the guidance for configuring Istio, both globally as well as for mission teams. Additional best practices should be followed, including:
          - NIST SP 800-204A: Building Secure Microservices-based Applications Using Service-Mesh Architecture
          - NIST SP 800-204B: Attribute-based Access Control for Microservices-based Applications using a Service Mesh
          Tetrate helps maintain and periodically audits BigBang’s Istio configurations to ensure they implement best practice defaults.
        
        links:
          - href: b848d438-58f7-49de-b784-f927acd9f7fa
            rel: reference
            text: Lula Validation
           
      - uuid: AB9189FF-34E2-4D7E-8018-EB346C7AE967
        control-id: cm-8.1
        description: >-
          Istio implements with global configuration.

          # How does Istio Help?
          Istio’s service inventory is updated continuously from the Kubernetes API server (the information system’s source of truth for what applications are running). 
          Therefore, the inventory is updated when components of the information system are installed or removed. As a result, Istio implements CM-8 (1) for the information system.
        
        links:
          - href: 6d46277f-d681-491d-8341-aad6f2ef880e
            rel: reference
            text: Lula Validation
           
      - uuid: A740C741-23B4-4ED9-937C-E0276A9B92EE
        control-id: cm-8.2
        description: >-
          Provides an inventory of all workloads (including mission apps) in the service mesh, viewable in Kiali. The inventory is automatically and continuously updated.
        
        links:
          - href: 57d1aefe-6c9b-4192-8581-73dd369cb589
            rel: reference
            text: Lula Validation
           
      - uuid: 61615706-5395-4168-8AD0-5C4ACBCC5D7E
        control-id: ia-2
        description: >-
          Istio implements with mission team configuration.

          # How does Istio Help?
          Istio can be used to implement authentication of end-user credentials for applications in the mesh. This is typically configured via Istio’s external authorization service or by validating JWTs on each request (see AC-3).
          If components in the information system are protected by Istio configured to validate end-user credentials, then Istio satisfies the authentication clause IA-2: “[the information system] authenticates organizational users (or processes acting on behalf or organizational users).” 
          Assigning user identities themselves, and ensuring their uniqueness, is out of scope of Istio. (Istio does assign identities to applications or processes running in the information system – see AC-4.)
        
        links:
          - href: 495f4dff-21f1-42c6-8f42-fd73a740e5e4
            rel: reference
            text: Lula Validation
           
      - uuid: 3004BB1D-0F50-48F1-ABFE-40CC522B1C15
        control-id: ia-4
        description: >-
          Istio contributes but does not implement.

          # How does Istio Help?
          Istio assigned identities to runtime entities based on their Kubernetes service account. Service accounts are unique per (namespace, service account name) pair and are assigned to all pods in the cluster. 
          Pods should opt in to using a specific service account, but if they do not then Kubernetes provides a default service account per namespace.

          The identities Istio assigned are:
            a. Authorized for the specific application by checking against the Kubernetes API server (the system of record for runtime identities).
            b. Each service receives an identity from Kubernetes at runtime, whether it is assigned explicitly or not.
            c. Sent only to correct workloads because Istio authenticates runtime proofs (mainly, the pod’s service account token) in addition to authorizing the identity by checking with the Kubernetes API server.
            d. Service accounts in Kubernetes are unique. However, Kubernetes-level controls (out of the scope of Istio) need to be implemented to ensure that identities are not re-used.
            e. The Kubernetes service account lifecycle is out of scope of Istio. A Kubernetes-level control is need to satisfy this requirement.
        
        links:
          - href: dc3fa293-49ce-427c-ba7a-860fffe34397
            rel: reference
            text: Lula Validation
           
      - uuid: 3FC44715-6068-44E5-9079-641D3FAA6A14
        control-id: ia-7
        description: >-
          Istio implements with global configuration.

          # How does Istio Help?
          Istio provides encryption in transit for all applications in the mesh, and can also provide TLS termination at ingress and TLS origination at egress. Tetrate Istio Distribution (TID) is the only FIPS 140-2 Verified Istio distribution that exists. It is available from the Iron Bank.
          When using the TID FIPS builds, all communication between components of the information system is encrypted using FIPS 140-2 verified software.
        
        links:
          - href: 8a2df8be-5387-4be9-b98f-95c4b5999c6b
            rel: reference
            text: Lula Validation
           
      - uuid: 82AC8314-BDA8-4A4D-B54D-4A0233563C7C
        control-id: sc-3
        description: >-
          Istio breaks-down services into microservices to isolate security functions from non-security functions. 
         
        links:
          - href: 0f605d27-e95f-434b-972f-453c62bd365f
            rel: reference
            text: Lula Validation
                    
      - uuid: 86bc4fb7-f91b-4f2c-b914-65427951018c
        control-id: sc-4
        description: >-
          Istio can enforce that outbound traffic goes through an Egress Gateway. When combined with a Network Policy, you can enforce all traffic, or some subset, goes through the egress gateway to prevent unauthorized and unintended information transfer via shared system resources.
        
        links:
          - href: a189f4ae-f3e5-4b05-9321-c7ddf5888725
            rel: reference
            text: Lula Validation
           
      - uuid: ffe69802-65bf-48bf-a7cd-6cab0cbf43d3
        control-id: sc-5
        description: >-
          Istio monitors the egress traffic and enforces all the security policies. Monitoring the egress traffic, enables you to analyze, possibly offline, and detect an attack.
        
        links:
          - href: fb606d63-b214-4ea2-b2c6-67385b9b819f
            rel: reference
            text: Lula Validation
           
      - uuid: 986E0C8B-6956-42AF-804E-FDB366DE6EDC
        control-id: sc-7
        description: >-
          Istio implements with global configuration.

          # How does Istio Help?
          Istio alone can not completely satisfy the SC-7 requirement, because Istio sits at Layer 4 and above, in other words it sits atop the IP network you provide it. However, Istio can aid in implementing boundary protection in your stack:
            a. Istio provides monitoring (AU-12) and control of traffic ingress into and egressing out of the cluster, as well as internally for all communication between components. If all information system components are running in the cluster, this satisfies SC-7 a.
            b. Istio operates at layer 4 and above - it cannot implement sub-networks at the IP layer. However, Istio can be used for logical separation of components at runtime (see AC-4 (21)). 
            Istio’s separation should be augmented with network-level separation, e.g. via a CNI plugin, to help implement a defense in depth strategy.
            c. The only ingress into the cluster is via Istio gateways (AC-3), egress is controlled by Istio gateways (AC-4). If all information system components are running in the cluster, this satisfies the needs of SC-7 c. 
            Further, access policy can be applied at both points, as well as at every application instance via Istio’s sidecar. This gives the organization the opportunity to implement more fine-grained controls than is needed by SC-7.
        
        links:
          - href: e622825a-5b4d-4fb9-9c37-5444b2e5c41b
            rel: reference
            text: Lula Validation
           
      - uuid: CB84CC94-BBAA-4177-9836-5AD0DE3A9937
        control-id: sc-7.4
        description: >-
          Istio implements with global configuration.

          # How does Istio Help?
          Like SC-7, Istio works in tandem with a few other components of the infrastructure to satisfy SC-7 (4). 
          For example, it’s common to use an identity-aware proxy (like Platform One’s CNAP), or even a cloud provider load balancer (like an ELB) as the initial interface for an external service, immediately passing the requests on to Istio’s ingress.
          For all of the information system components in the cluster:
            a. Istio provides an interface its ingress and egress gateways for external network traffic. Istio allows configuring how that interface is exposed, including ports and protocols as well as certificates that are served. See AC-4.
            b. Istio provides fine-grained layer 7 policy on each request to control how traffic flows through that ingress. It enforces this policy at ingress gateways to control the external traffic ingress into your information system. 
            Istio also enforces them at egress gateways to control how components of your information system communicate with external systems. See AC-4.
            c. Istio’s ingress gateways serve TLS (or mTLS) to external systems, and Istio provides mTLS between applications of the information system in the mesh. See AC-4.
            d. Istio must be explicitly configured to allow exceptions, either in AuthorizationPolicy documents controlling runtime access or in resource annotations exempting traffic from Istio’s sidecar. 
            These can be used as supporting documents for SC-7 (4) d., but will need to be augmented with organizational documentation citing specific mission needs and durations.
            e. This is an organizational activity out of the scope of Istio.
        
        links:
          - href: 2e98ac3d-5b77-4199-8087-ce0a40e302d1
            rel: reference
            text: Lula Validation
           
      - uuid: CB84CC94-BBAA-4177-9836-5AD0DE3A9937
        control-id: sc-7.5
        description: >-
          Istio implements with mission team configuration.

          # How does Istio Help?
          At ingress and egress gateways, Istio denies all traffic that does not have explicit traffic routing policies in the form of a VirtualService attached to the gateways. 
          Inside of the mesh, and to control egress out to external services, you can author AuthorizationPolicies to limit access. 
          Those policies must be written in the “allow with positive matching” style. 
          Together, Istio implements the SC-7 (5) control on behalf of applications in the mesh.
        
        links:
          - href: 9417e258-3474-4016-9e68-b3eeafcd181c
            rel: reference
            text: Lula Validation
           
      - uuid: 4b930af3-ae84-43ff-b751-448fe1c2eec8
        control-id: sc-7.8
        description: >-
          Istio’s traffic management model relies on the Envoy proxies that are deployed along with the services. 
          All traffic that the mesh services send and receive (data plane traffic) is proxied through Envoy, making it easy to direct and control traffic around the mesh without making any changes to the services.
        
        links:
          - href: eecac746-c5b9-481f-8c6a-9f19bc35e182
            rel: reference
            text: Lula Validation
           
      - uuid: 5baf367f-d917-4399-80e5-5c77a18a120a
        control-id: sc-7.10
        description: >-
          Istio can set an alert to detect attempted data exfiltration by a service in the cluster. In this mode, Prometheus can tell you both the source and (attempted) destination workload for the blocked request.
          The Istio System manages the ingress and egress network traffic permitted within your OPA-integrated Istio service mesh. You can specify egress traffic is only allowed to a predefined collection of endpoints to minimize the risk of data exfiltration or to implement microservice API authorization.
        
        links:
          - href: 647f94be-cc16-4873-aa67-6b58ee708003
            rel: reference
            text: Lula Validation
           
      - uuid: 30b49a3e-ad38-441d-8c07-5a9018848a02
        control-id: sc-7.20
        description: >-
          Locality-weighted load balancing allows administrators to control the distribution of traffic to endpoints based on the localities of where the traffic originates and where it will terminate. 
          These localities are specified using arbitrary labels that designate a hierarchy of localities in {region}/{zone}/{sub-zone} form.
          If the goal of the operator is not to distribute load across zones and regions but rather to restrict the regionality of failover to meet other operational requirements an operator can set a ‘failover’ policy instead of a ‘distribute’ policy.
        
        links:
          - href: d9da625b-806a-4992-a1f7-f26a277a011d
            rel: reference
            text: Lula Validation
           
      - uuid: c9a1e9bc-3caa-44ce-a300-ecd722487987
        control-id: sc-7.21
        description: >-
          Multi-mesh deployments facilitate division of a system into subsystems with different security and compliance requirements, and facilitate the boundary protection. 
          You put each subsystem into a separate service mesh, preferably on a separate network. You connect the Istio meshes using gateways. The gateways monitor and control cross-mesh traffic at the boundary of each mesh.
          Istio isolation boundaries can run multiple TSB-managed Istio environments within a Kubernetes cluster, or spanning several clusters. 
          These Istio environments are isolated from each other in terms of service discovery and config distribution. 
        
        links:
          - href: bd9ac2a2-a681-41fa-988f-8f9bee06bb68
            rel: reference
            text: Lula Validation
           
      - uuid: ca307f39-eb42-4df3-9054-4d66130e0118
        control-id: sc-7.25
        description: >-
          All outbound traffic from an Istio-enabled pod is redirected to its sidecar proxy by default, accessibility of URLs outside of the cluster depends on the configuration of the proxy. 
          By default, Istio configures the Envoy proxy to pass through requests for unknown services. Although this provides a convenient way to get started with Istio, configuring stricter control is usually preferable.
          Egress gateways can limit how traffic flows to external services outside of the information system under control.
          Istio can be configured to extract end-user credentials from requests for authentication (either locally, or forwarding them on to an external authorization service), and to disallow requests without authentication tokens. 
        
        links:
          - href: f78d9ca9-23ad-4044-9f0c-ba9ccaedcafb
            rel: reference
            text: Lula Validation
           
      - uuid: CB84CC94-BBAA-4177-9836-5AD0DE3A9937
        control-id: sc-8
        description: >-
          Istio implements with global configuration.

          # How does Istio Help?
          Istio provides encryption in transit (TLS) for all applications in the mesh. This ensures both confidentiality and integrity of communication between applications deployed in the mesh. When you deploy a FIPS verified build of Istio (e.g. from the Tetrate Istio Distribution), that encryption conforms to FIPS 140-2 requirements. When Istio is configured in STRICT mTLS mode (see AC-4), it implements the SC-8 control for all applications in the mesh.
        
        links:
          - href: 1279a202-8151-4ab8-871a-a9b5c989d9ce
            rel: reference
            text: Lula Validation
           
      - uuid: 69415B92-0490-4A14-9E0F-E1EE61951F9C
        control-id: sc-8.1
        description: >-
          Istio implements with global configuration.

          # How does Istio Help?
          See SC-8 for full details. In short, Istio provides encryption in transit (mutual TLS) for all applications in the mesh. When you’re using TID’s FIPS verified build of Istio, then this encryption also satisfies FIPS 140-2 requirements.
        
        links:
          - href: f955f7c3-b4bd-47b3-b8e7-cc48df0f1a3f
            rel: reference
            text: Lula Validation
           
      - uuid: c158b75a-cefc-4794-b124-f1e56ff5646d
        control-id: sc-8.2
        description: >-
          Istio implements with global configuration.

          # How does Istio Help?
          Istio provides encryption in transit (TLS) for all applications in the mesh. This ensures both confidentiality and integrity of communication between applications deployed in the mesh. When you deploy a FIPS verified build of Istio (e.g. from the Tetrate Istio Distribution), that encryption conforms to FIPS 140-2 requirements. When Istio is configured in STRICT mTLS mode (see AC-4), it implements the SC-8 control for all applications in the mesh.
        
        links:
          - href: 618e801a-5447-4d41-81a5-6c1a73bf0dc6
            rel: reference
            text: Lula Validation
           
      - uuid: 169c9ad3-0a6c-46ee-80cd-cd8cef5eca5c
        control-id: sc-10
        description: >-
          A timeout for HTTP requests can be specified using a timeout field in a route rule.
        
        links:
          - href: 1bdbcd07-3377-42c6-b5f5-f0e733e33eea
            rel: reference
            text: Lula Validation
           
      - uuid: B6B9D143-6936-4C33-BF2A-3C2B1F282B25
        control-id: sc-13
        description: >-
          Istio implements with global configuration.

          # How does Istio Help?
          As outlined in the section on SC-8, Istio provides encryption in transit for all applications in the mesh. The Tetrate Istio Distribution’s FIPS Verified build is the only FIPS verified build of Istio and Envoy available, and satisfies requirements for FIPS 140-2 as well as the requirement to use the best available software for the job.
        
        links:
          - href: e3ba6c86-9b63-4784-99c1-48ad1060a2f8
            rel: reference
            text: Lula Validation
           
      - uuid: 625bfdc1-0b20-45f3-919b-91afbac77799
        control-id: sc-23
        description: >-
          Istio implements with global configuration.

          # How does Istio Help?
          Istio provides encryption in transit (TLS) for all applications in the mesh. This ensures both confidentiality and integrity of communication between applications deployed in the mesh. When you deploy a FIPS verified build of Istio (e.g. from the Tetrate Istio Distribution), that encryption conforms to FIPS 140-2 requirements. When Istio is configured in STRICT mTLS mode (see AC-4), it implements the SC-8 control for all applications in the mesh.
        
        links:
          - href: 885df32b-33b3-4541-98ed-bd54f7777696
            rel: reference
            text: Lula Validation
           
      - uuid: f972ef8d-1eb0-403b-8db8-e65a4f4e2aaa
        control-id: sc-39
        description: >-
          Istio’s authorization features provide mesh-, namespace-, and workload-wide access control for your workloads in the mesh.
          Istio supports trust domain migration for authorization policy. This means if an Istio mesh needs to change its trust domain, the authorization policy doesn’t need to be changed manually.
        
        links:
          - href: 0b5e3b42-2020-422b-9939-d9c93d009f99
            rel: reference
            text: Lula Validation
           
      - uuid: e074c939-cd8c-46d0-a851-f3c54fcd5507
        control-id: si-4.22
        description: >-
          Istio implements with global configuration.

          # How does Istio Help?
          Istio generates logs for all network traffic - TCP connections, HTTP requests, etc. Can be configured for specific network traffic such as not authorized or approved by a system process or user.
          Network event alerts can be configured by organizations need.
        
        links:
          - href: 0e3de96a-936b-42dc-bea8-7586112ded05
            rel: reference
            text: Lula Validation
           
  back-matter:
    resources:
    - uuid: 60826461-D279-468C-9E4B-614FAC44A306
      title: Istio Operator
      rlinks:
      - href: https://github.com/istio/istio/
    - uuid: 41CD9F61-43AB-4220-966A-60F942577C94
      title: Big Bang Istio Operator package
      rlinks:
      - href: https://repo1.dso.mil/platform-one/big-bang/apps/core/istio-controlplane
    - uuid: 8eabdd2a-d637-4b00-a215-a953d7feed74
      title: Lula Validation
      remarks: Enforce approved authorizations for logical access to information and system resources in accordance with applicable access control policies.
    - uuid: ca49ac97-487a-446a-a0b7-92b20e2c83cb
      title: Lula Validation
      remarks: Enforce approved authorizations for controlling the flow of information within the system and between connected systems based on organization-defined information flow control policies.
    - uuid: fd071676-6b92-4e1c-a4f0-4c8d2bd55aed
      title: Lula Validation
      remarks: Prevent encrypted information from bypassing organization-defined information flow control mechanisms by Select (one or more); decrypting the information; blocking the flow of the encrypted information; terminating communications sessions attempting to pass encrypted information; organization-defined procedure or method.
    - uuid: 008e905b-4143-43f1-9211-9835059a1c68
      title: Lula Validation
      remarks: Separate information flows logically or physically using organization-defined mechanisms and/or techniques to accomplish organization-defined required separations by types of information.
    - uuid: f7b587d2-b44b-42df-a9c0-e4c3d09670da
      title: Lula Validation
      remarks: Authorize network access to organization-defined privileged commands only for organization-defined compelling operational needs and document the rationale for such access in the security plan for the system.
    - uuid: 854746a0-3e4d-4939-a2c6-069f9b34d929
      title: Lula Validation
      remarks: Log the execution of privileged functions.
    - uuid: 8841bc08-0b11-43f6-807c-0ec66da9161a
      title: Lula Validation
      remarks:  a. Identify organization-defined user actions that can be performed on the system without identification or authentication consistent with organizational mission and business functions; and
                b. Document and provide supporting rationale in the security plan for the system, user actions not requiring identification or authentication.
    - uuid: facb4f26-76dc-4f90-855a-9b80a74d5a00
      title: Lula Validation
      remarks: Route remote accesses through authorized and managed network access control points.
    - uuid: 2d930528-7411-4d4c-a92f-f7aa96e68f10
      title: Lula Validation
      remarks: a. Identify the types of events that the system is capable of logging in support of the audit function for organization-defined event types that the system is capable of logging;
                b. Coordinate the event logging function with other organizational entities requiring audit-related information to guide and inform the selection criteria for events to be logged;
                c. Specify the following event types for logging within the system; organization-defined event types (subset of the event types defined in AU-2a.) along with the frequency of (or situation requiring) logging for each identified event type;
                d. Provide a rationale for why the event types selected for logging are deemed to be adequate to support after-the-fact investigations of incidents; and
                e. Review and update the event types selected for logging organization-defined frequency.
    - uuid: 67eec4e5-73d6-4f68-aa47-5f0e15416b58
      title: Lula Validation
      remarks:  Ensure that audit records contain information that establishes the following;
                a. What type of event occurred;
                b. When the event occurred;
                c. Where the event occurred;
                d. Source of the event;
                e. Outcome of the event; and 
                f. Identity of any individuals, subjects, or objects/entities associated with the event.
    - uuid: 9a552d2e-31e0-41a6-8d3b-235533294ea0
      title: Lula Validation
      remarks: Generate audit records containing the following additional information; organization-defined additional information.
    - uuid: d245b381-ffc3-4258-bc8d-a01e7a61d98b
      title: Lula Validation
      remarks:  a. Protect audit information and audit logging tools from unauthorized access, modification, and deletion; and
                b. Alert organization-defined personnel or roles upon detection of unauthorized access, modification, or deletion of audit information.
    - uuid: 941583f4-2563-4671-b94c-9b4378d170fa
      title: Lula Validation
      remarks: Store audit records organization-defined frequency in a repository that is part of a physically different system or system component than the system or component being audited.
    - uuid: 9e2f0907-28b0-4438-b196-4a7f3b3c98fa
      title: Lula Validation
      remarks:  a. Provide audit record generation capability for the event types the system is capable of auditing as defined in AU-2a on organization-defined system components;
                b. Allow organization-defined personnel or roles to select the event types that are to be logged by specific components of the system; and
                c. Generate audit records for the event types defined in AU-2c that include the audit record content defined in AU-3.
    - uuid: 3df5b81c-dafb-4de1-a120-07f234d66ea5
      title: Lula Validation
      remarks: Define, document, approve, and enforce physical and logical access restrictions associated with changes to the system.
    - uuid: b848d438-58f7-49de-b784-f927acd9f7fa
      title: Lula Validation
      remarks:  a. Establish and document configuration settings for components employed within the system that reflect the most restrictive mode consistent with operational requirements using organization-defined common secure configurations;
                b. Implement the configuration settings;
                c. Identify, document, and approve any deviations from established configuration settings for organization-defined system components based on organization-defined operational requirements; and
                d. Monitor and control changes to the configuration settings in accordance with organizational policies and procedures.
    - uuid: 6d46277f-d681-491d-8341-aad6f2ef880e
      title: Lula Validation
      remarks: Update the inventory of system components as part of component installations, removals, and system updates.
    - uuid: 57d1aefe-6c9b-4192-8581-73dd369cb589
      title: Lula Validation
      remarks: Maintain the currency, completeness, accuracy, and availability of the inventory of system components using automated mechanism.
    - uuid: 495f4dff-21f1-42c6-8f42-fd73a740e5e4
      title: Lula Validation
      remarks: Uniquely identify and authenticate organizational users and associate that unique identification with processes acting on behalf of those users.
    - uuid: dc3fa293-49ce-427c-ba7a-860fffe34397
      title: Lula Validation
      remarks: a. Receiving authorization from [Assignment, organization-defined personnel or roles] to assign an individual, group, role, service, or device identifier;
               b. Selecting an identifier that identifies an individual, group, role, service, or device;
               c. Assigning the identifier to the intended individual, group, role, service, or device; and
               d. Preventing reuse of identifiers for [Assignment, organization-defined time period].
    - uuid: 8a2df8be-5387-4be9-b98f-95c4b5999c6b
      title: Lula Validation
      remarks: Implement mechanisms for authentication to a cryptographic module that meet the requirements of applicable laws, executive orders, directives, policies, regulations, standards, and guidelines for such authentication.
    - uuid: 0f605d27-e95f-434b-972f-453c62bd365f
      title: Lula Validation
      remarks: Isolate security functions from non-security functions.
    - uuid: a189f4ae-f3e5-4b05-9321-c7ddf5888725
      title: Lula Validation
      remarks: Prevent unauthorized and unintended information transfer via shared system resources.
    - uuid: fb606d63-b214-4ea2-b2c6-67385b9b819f
      title: Lula Validation
      remarks:  a. Protect against and limit the effects of the following types of denial-of-service events [Assignment, organization-defined types of denial-of-service events]; and
                b. Employ the following controls to achieve the denial-of-service objective [Assignment, organization-defined controls by type of denial-of-service event].
    - uuid: e622825a-5b4d-4fb9-9c37-5444b2e5c41b
      title: Lula Validation
      remarks:  a. Monitor and control communications at the external managed interfaces to the system and at key internal managed interfaces within the system;
                b. Implement sub-networks for publicly accessible system components that are [Selection, physically; logically] separated from internal organizational networks; and
                c. Connect to external networks or systems only through managed interfaces consisting of boundary protection devices arranged in accordance with an organizational security and privacy architecture.
    - uuid: 2e98ac3d-5b77-4199-8087-ce0a40e302d1
      title: Lula Validation
      remarks: (a) Implement a managed interface for each external telecommunication service;
               (b) Establish a traffic flow policy for each managed interface;
               (c) Protect the confidentiality and integrity of the information being transmitted across each interface;
               (d) Document each exception to the traffic flow policy with a supporting mission or business need and duration of that need;
               (e) Review exceptions to the traffic flow policy [Assignment, organization-defined frequency] and remove exceptions that are no longer supported by an explicit mission or business need;
               (f) Prevent unauthorized exchange of control plane traffic with external networks;
               (g) Publish information to enable remote networks to detect unauthorized control plane traffic from internal networks; and
               (h) Filter unauthorized control plane traffic from external networks.
    - uuid: 9417e258-3474-4016-9e68-b3eeafcd181c
      title: Lula Validation
      remarks: Deny network communications traffic by default and allow network communications traffic by exception at managed interfaces for defined systems.
    - uuid: eecac746-c5b9-481f-8c6a-9f19bc35e182
      title: Lula Validation
      remarks: Route organization-defined internal communications traffic to organization-defined external networks through authenticated proxy servers at managed interfaces.
    - uuid: 647f94be-cc16-4873-aa67-6b58ee708003
      title: Lula Validation
      remarks: Prevent the exfiltration of information and conduct exfiltration tests on an organization-defined frequency.
    - uuid: d9da625b-806a-4992-a1f7-f26a277a011d
      title: Lula Validation
      remarks: Provide the capability to dynamically isolate organization-defined system components from other system components.
    - uuid: bd9ac2a2-a681-41fa-988f-8f9bee06bb68
      title: Lula Validation
      remarks: Employ boundary protection mechanisms to isolate organization-defined system components supporting organization-defined missions and/or business functions.
    - uuid: f78d9ca9-23ad-4044-9f0c-ba9ccaedcafb
      title: Lula Validation
      remarks: Prohibit the direct connection of organization-defined unclassified national security system to an external network without the use of organization-defined boundary protection devices.
    - uuid: 1279a202-8151-4ab8-871a-a9b5c989d9ce
      title: Lula Validation
      remarks: Protect the confidentiality and integrity of transmitted information.
    - uuid: f955f7c3-b4bd-47b3-b8e7-cc48df0f1a3f
      title: Lula Validation
      remarks: Implement cryptographic mechanisms to prevent unauthorized disclosure of information and detect changes to information during transmission.
    - uuid: 618e801a-5447-4d41-81a5-6c1a73bf0dc6
      title: Lula Validation
      remarks: Maintain the confidentiality and integrity of information during preparation for transmission and during reception.
    - uuid: 1bdbcd07-3377-42c6-b5f5-f0e733e33eea
      title: Lula Validation
      remarks: Terminate the network connection associated with a communications session at the end of the session or after an organization-defined time period of inactivity.
    - uuid: e3ba6c86-9b63-4784-99c1-48ad1060a2f8
      title: Lula Validation
      remarks: Determine the organization-defined cryptographic uses and implement the cryptography required for each specified cryptographic use by organization-defined types of cryptography for each specified cryptographic use.
    - uuid: 885df32b-33b3-4541-98ed-bd54f7777696
      title: Lula Validation
      remarks: Protect the authenticity of communications sessions.
    - uuid: 0b5e3b42-2020-422b-9939-d9c93d009f99
      title: Lula Validation
      remarks: Maintain a separate execution domain for each executing system process.
    - uuid: 0e3de96a-936b-42dc-bea8-7586112ded05
      title: Lula Validation
      remarks: Detect network services that have not been authorized or approved by organization-defined authorization or approval processes and audit or alert organization-defined personnel or roles when detected.